% Encoding: UTF-8

@Standard{2015-RevolN+ThompsonT-IEEE-IA,
  title        = {{IEEE} standard for interval arithmetic},
  organization = {IEEE SA},
  institution  = {IEEE},
  author       = {Revol {(Chair)}, Nathalie and Thompson {(Manager)}, Tom},
  language     = {English},
  howpublished = {Online},
  number       = {1788-2015},
  address      = {Piscataway, NJ 08854-4141 USA},
  month        = jun,
  year         = {2015},
  note         = {Accessed on Tue 07 Jul 2020},
  url          = {https://standards.ieee.org/standard/1788-2015.html},
  abstract     = {This standard specifies basic interval arithmetic (IA) operations selecting and following one of the commonly used mathematical interval models. This standard supports the IEEE 754 floating point formats of practical use in interval computations. Exception conditions are defined, and standard handling of these conditions is specified. Consistency with the interval model is tempered with practical considerations based on input from representatives of vendors, developers and maintainers of existing systems. The standard provides a layer between the hardware and the programming language levels. It does not mandate that any operations be implemented in hardware. It does not define any realization of the basic operations as functions in a programming language.},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Article{2012-BezansonJ+EdelmanA-CoRR,
  author   = {Bezanson, Jeff and Karpinski, Stefan and Shah, Viral B. and Edelman, Alan},
  title    = {Julia: {A} fast dynamic language for technical computing},
  journal  = {Computing Research Repository},
  year     = {2012},
  abstract = {Dynamic languages have become popular for scientific computing. They are generally considered highly productive, but lacking in performance. This paper presents Julia, a new dynamic language for technical computing, designed for performance from the beginning by adapting and extending modern programming language techniques. A design based on generic functions and a rich type system simultaneously enables an expressive programming model and successful type inference, leading to good performance for a wide range of programs. This makes it possible for much of the Julia library to be written in Julia itself, while also incorporating best-of-breed C and Fortran libraries.},
  doi      = {arXiv:1209.5145},
  file     = {:2012-BezansonJ+EdelmanA-CoRR.pdf:PDF},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Article{2017-BezansonJ+ShahVB-SIAMRev,
  author   = {Bezanson, Jeff and Edelman, Alan and Karpinski, Stefan and Shah, Viral B.},
  title    = {Julia: a fresh approach to numerical computing.},
  journal  = {SIAM Review},
  year     = {2017},
  volume   = {59},
  number   = {1},
  pages    = {65--98},
  issn     = {00361445},
  abstract = {Bridging cultures that have often been distant, Julia combines expertise from the diverse fields of computer science and computational science to create a new approach to numerical computing. Julia is designed to be easy and fast and questions notions generally held to be "laws of nature" by practitioners of numerical computing: 1. High-level dynamic programs have to be slow. 2. One must prototype in one language and then rewrite in another language for speed or deployment. 3. There are parts of a system appropriate for the programmer, and other parts that are best left untouched as they have been built by the experts. We introduce the Julia programming language and its design---a dance between specialization and abstraction. Specialization allows for custom treatment. Multiple dispatch, a technique from computer science, picks the right algorithm for the right circumstance. Abstraction, which is what good computation is really about, recognizes what remains the same after differences are stripped away. Abstractions in mathematics are captured as code through another technique from computer science, generic programming. Julia shows that one can achieve machine performance without sacrificing human convenience.},
  keywords = {Scientific Computing, Numerical Solutions to Functional Equations, Applied Mathematics, Julia, Numerical, Parallel, Scientific Computing},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Misc{2020-BenetL+SandersDP-IntervalArithmetic.jl,
  author       = {Benet, Luis and Sanders, David P.},
  title        = {{IntervalArithmetic.jl} -- {R}igorous floating-point calculations using interval arithmetic in {J}ulia},
  howpublished = {Online},
  year         = {2020},
  note         = {Contributors: Heimlich, Oliver and Kryukov, Nikolay and Verzani, John and others. Retrieved on Tue 07 Jul 2020.},
  journal      = {GitHub repository},
  organization = {{JuliaIntervals}},
  publisher    = {GitHub},
  url          = {https://github.com/JuliaIntervals/IntervalArithmetic.jl},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Book{2009-MooreR-SIAM-Introduction,
  title     = {Introduction to interval analysis},
  publisher = {Society for Industrial and Applied Mathematics},
  year      = {2009},
  author    = {Moore, Ramon},
  address   = {Philadelphia, PA},
  isbn      = {9780898716696},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Book{2011-TuckerW-Princeton-Validated,
  title     = {Validated numerics: {A} short introduction to rigorous computations},
  publisher = {Princeton University Press},
  year      = {2011},
  author    = {Tucker, Warwick},
  address   = {Princeton},
  isbn      = {9781400838974},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Book{1985-WylenG-Wiley,
  title     = {Fundamentals of classical thermodynamics},
  publisher = {Wiley},
  year      = {1985},
  author    = {Wylen, Gordon},
  address   = {New York},
  edition   = {Fourth},
  isbn      = {978-04-718-0014-9},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Book{1988-HeywoodJB-McGrawHill,
  title     = {Internal combustion engine fundamentals},
  publisher = {McGraw-Hill},
  year      = {1988},
  author    = {Heywood, John B.},
  series    = {Mechanical engineering},
  isbn      = {978-0-07028-637-5},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Article{2001-CatonJA-IntJMechEngEduc,
  author   = {Caton, Jerald A.},
  title    = {Comparisons of instructional and complete versions of thermodynamic engine cycle simulations for spark-ignition engines},
  journal  = {Int J Mech Eng Educ},
  year     = {2001},
  volume   = {29},
  number   = {4},
  pages    = {283--306},
  month    = oct,
  issn     = {0306-4190},
  abstract = {Instructional and complete versions of thermodynamics engine cycle simulations for spark-ignition engines were compared. The instructional version of the cycle simulation used constant specific heats as compared to using variable properties and composition for the complete simulation. For the proper selection of constant properties, the global engine performance parameters obtained from the instructional version of the cycle simulation were in close agreement to the values obtained from using the complete version of the simulation. The specific values of items such as maximum pressure and temperature, however, were not exactly duplicated. Examples are given based on a commercial, spark-ignition engine. For the cases studied here, the brake power and thermal efficiency as obtained from the constant property version of the simulation (for a ratio of specific heats of 1.30 and a gas constant of 0.287 kJ/kg K) were in excellent agreement with the same parameters from the complete simulation for a range of operating conditions.},
  doi      = {10.7227/IJMEE.29.4.1},
  file     = {:2001-CatonJA-IntJMechEngEduc.pdf:PDF},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Article{2002-CatonJA-IntJMechEngEduc,
  author   = {Caton, Jerald A.},
  title    = {Illustration of the use of an instructional version of a thermodynamic cycle simulation for a commercial automotive spark-ignition engine},
  journal  = {Int J Mech Eng Educ},
  year     = {2002},
  volume   = {30},
  number   = {4},
  pages    = {283--297},
  abstract = {The development and use of an instructional version of a thermodynamic engine cycle simulation for classroom use is described. This simulation is based on well-established features, but which are not necessarily the most advanced. The major simplification of this instructional simulation is the use of constant specific heat capacities as opposed to the use of variable composition and properties. The cycle simulation was developed with an elementary set of conventional sub-model components. To account for the unsteady flow dynamics, an empirical adjustment factor was used. With the exception of this empirical adjustment factor, all of the constants associated with the sub-models are used as suggested by the original publications. Students, therefore, are readily able to develop and use this simulation.This paper then demonstrates the usefulness of such a basic simulation in describing the overall performance of a commercial automotive spark-ignition engine for a range of engine speeds and operating conditions. A modern, four-valve per cylinder, two-camshaft engine was selected for this study. Although the cycle simulation was based on elementary conventional features, a number of important engine characteristics were correctly obtained. These included the overall performance for engine speeds up to 7000 rpm, and details such as the time (crank angle) of peak pressure for optimum performance.},
  doi      = {10.7227/IJMEE.30.4.1},
  file     = {:2002-CatonJA-IntJMechEngEduc.pdf:PDF},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Book{2002-MoranMJ+ShapiroHN-LTC,
  title     = {Princípios de termodinâmica para engenharia},
  publisher = {Livros Técnicos e Científicos Editora},
  year      = {2002},
  author    = {Moran, Michael J. and Shapiro, Howard N.},
  address   = {Rio de Janeiro, RJ},
  edition   = {Fourth},
  isbn      = {978-85-216-1340-4},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Article{2008-CurtoRissoPL+HernandezAC-JApplPhys,
  author    = {Curto-Risso, P. L. and Medina, A. and Hernández, A. Calvo},
  title     = {Theoretical and simulated models for an irreversible {Otto} cycle},
  journal   = {J Appl Phys},
  year      = {2008},
  volume    = {104},
  pages     = {094911-1--11},
  month     = nov,
  abstract  = {We show in this work that a finite-time-thermodynamics model of an irreversible Otto cycle is suitable to reproduce performance results of a real spark ignition heat engine. In order to test our model we have developed a computer simulation including a two-zone combustion model and compared the evolution of the performance parameters of the simulated engine as functions of the rotational speed $\omega$ with those obtained from a simple theoretical scheme including chemical reactions. A theoretical Otto cycle with irreversibilities arising from friction, heat transfer through the cylinder walls, and internal losses properly reproduces simulation results by considering extreme temperatures and mass inside the cylinder as functions of $\omega$. Furthermore we obtain realistic values for the parameters characterizing global irreversibilities, their evolution with $\omega$, and a clearer understanding of their physical origin not always well established in theoretical models.},
  doi       = {http://dx.doi.org/10.1063/1.2986214},
  file      = {:2008-CurtoRissoPL+HernandezAC-JApplPhys.pdf:PDF},
  owner     = {chris},
  timestamp = {2016.03.21},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Article{2011-ZuecoJ-IntJMechEngEduc,
  author   = {Zueco, Joaquín},
  title    = {Educational software to study alternative internal combustion engine cycles},
  journal  = {Int J Mech Eng Educ},
  year     = {2011},
  volume   = {39},
  number   = {2},
  pages    = {101--113},
  abstract = {This paper illustrates the use of engine modelling in the educational setting through the development and use of software for the simulation of cycles of different internal combustion engines. Modelling and computer simulation of an internal combustion engine's operating processes offer a valuable tool for enhancing understanding of real physical phenomena and contribute significantly to optimizing and controlling the engine's operation to meet different objectives. The paper begins by describing the theoretical models of engine operation. These models are for various fluids: perfect gas, ideal gas and air/fuel mixes; and for constant volume (Otto cycle), constant pressure and mixed (diesel) cycles. The software has been developed to solve many problems and it facilitates understanding of the thermodynamic fundamentals of an internal combustion engine. Overall, this study demonstrates the power of such an engine simulation tool in an educational setting.},
  comment  = {http://ijj.sagepub.com/content/39/2/101.abstract},
  doi      = {10.7227/IJMEE.39.2.2},
  file     = {:2011-ZuecoJ-IntJMechEngEduc.pdf:PDF},
  owner    = {chris},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Book{2012-BrunettiF-Blucher,
  title     = {Motores de combustão interna},
  publisher = {Edgard Blücher},
  year      = {2012},
  author    = {Brunetti, Franco},
  editor    = {1},
  volume    = {1},
  address   = {São Paulo},
  owner     = {chris},
  timestamp = {2016.03.22},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Book{2013-MartinsJJG-Publindustria,
  title     = {Motores de combustão interna},
  publisher = {Publindústria},
  year      = {2013},
  author    = {Martins, Jorge José Gomes},
  address   = {Porto, Portugal},
  edition   = {Fourth},
  owner     = {chris},
  timestamp = {2016.03.22},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Book{2014-CengelYA+BolesMA-McGrawHill,
  title     = {Thermodynamics: an engineering approach},
  publisher = {McGraw-Hill Education},
  year      = {2014},
  author    = {Çengel, Yunus A. and Boles, Michael A.},
  edition   = {8th},
  owner     = {chris},
  timestamp = {2016.03.22},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Book{2015-KroosKA+PotterMC-Cengage,
  title     = {Termodinâmica para engenheiros},
  publisher = {Cengage Learning},
  year      = {2015},
  author    = {Kroos, Kenneth A. and Potter, Merle C.},
  address   = {São Paulo, SP},
  edition   = {First},
  isbn      = {978-85-221-2198-4},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Article{2017-NaaktgeborenC-IntJMechEngEduc,
  author   = {Naaktgeboren, C.},
  title    = {An air-standard finite-time heat addition otto engine model},
  journal  = {Int J Mech Eng Educ},
  year     = {2017},
  volume   = {45},
  number   = {2},
  pages    = {103--119},
  issn     = {0306-4190},
  abstract = {A classical thermodynamic model for spark-ignited internal combustion engine simulation in which the heat addition process that takes a finite amount of time to complete is presented along with an illustrative parameter sensibility case study. The model accounts for all air-standard Otto cycle parameters, as well as crank-connecting rod mechanism, ignition timing, engine operating speed, and cumulative heat release history parameters. The model is particularly suitable for engineering undergraduate education, as it preserves most of the air-standard assumptions, while being able to reproduce real engine traits, such as the decay of maximum pressure, power, and thermal efficiency at higher engine operating speeds. In terms of complexity, the resulting finite-time heat addition Otto cycle sits between the classical air-standard Otto cycle and the more involved air–fuel Otto cycle, that are usually introduced on more advanced mechanical engineering courses, and allows students to perform engine parameter sensibility studies using only classical, single phase, pure substance, undergraduate engineering thermodynamics.},
  doi      = {10.1177/0306419016689447},
  file     = {:2017-NaaktgeborenC-IntJMechEngEduc.pdf:PDF},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@TechReport{2018-SilvaRKO-UTFPR,
  author      = {Silva, Rodolpho Kades de Oliveira e},
  title       = {Modelo ar-combustível de tempo finito de adição de calor de motores {O}tto},
  institution = {Universidade Tecnológica Federal do Paraná},
  year        = {2018},
  type        = {resreport},
  address     = {Guarapuava, PR, Brazil},
  url         = {http://repositorio.roca.utfpr.edu.br/jspui/handle/1/8786},
}

@Comment{jabref-meta: databaseType:bibtex;}

@misc{2020-NaaktgeborenC-Polytropic-engrXiv-rev02,
 title={On Exact and Local Polytropic Processes: Etymology, Modeling, and Requisites},
 url={engrxiv.org/ca6d4},
 DOI={10.31224/osf.io/ca6d4},
 publisher={engrXiv},
 author={Naaktgeboren, C.},
 year={2020. engrxiv.org/ca6d4},
 month={May}
}

% Encoding: UTF-8

@Article{2014-BellIH+VincentL-IndEngChemR,
  author  = {Bell, Ian H. and Wronski, Jorrit and Quoilin, Sylvain and Lemort, Vincent},
  title   = {Pure and Pseudo-pure Fluid Thermophysical Property Evaluation and the Open-Source Thermophysical Property Library CoolProp},
  journal = {Industrial \& Engineering Chemistry Research},
  year    = {2014},
  volume  = {53},
  number  = {6},
  pages   = {2498--2508},
  doi     = {10.1021/ie4033999},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Book{2007-PressWH+FlanneryBP-Cambridge,
  title     = {Numerical recipes: the art of scientific computing},
  publisher = {Cambridge University Press},
  year      = {2007},
  author    = {Press, William H. and Teukolsky, Saul A. and Vetterling, William T. and Flannery, Brian P.},
  edition   = {3rd},
  month     = {September 10},
  comment   = {ISBN-13: 978-0521880688},
  owner     = {chris},
  timestamp = {2016.03.29},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@TechReport{1995-vanRossumG-CWI,
  author    = {van Rossum, Guido},
  title     = {Python reference manual},
  year      = {1995},
  address   = {Amsterdam, The Netherlands},
  abstract  = {Python is a simple, yet powerful, interpreted programming language that bridges the gap between C and shell programming, and is thus ideally suited for ``throw-away programming'' and rapid prototyping. Its syntax is put together from constructs borrowed from a variety of other languages; most prominent are influences from ABC, C, Modula-3 and Icon. The Python interpreter is easily extended with new functions and data types implemented in C. Python is also suitable as an extension language for highly customizable C applications such as editors or window managers. Python is available for various operating systems, amongst which several flavors of UNIX (including Linux), the Apple Macintosh O.S., MS-DOS, MS-Windows 3.1, Windows NT, and OS/2. This reference manual describes the syntax and ``core semantics'' of the language. It is terse, but attempts to be exact and complete. The semantics of non-essential built-in object types and of the built-in functions and modules are described in the Python Library Reference. For an informal introduction to the language, see the Python Tutorial.},
  owner     = {chris},
  publisher = {CWI (Centre for Mathematics and Computer Science)},
  source    = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Aercim_cwi%3Aercim.cwi%2F%2FCS-R9525},
  timestamp = {2016.03.29},
}

@Comment{jabref-meta: databaseType:bibtex;}

% Encoding: UTF-8

@Misc{2019-Jupyter-www,
  author       = {{Jupyter Team}},
  title        = {Jupyter documentation},
  howpublished = {Online},
  year         = {2019},
  note         = {Last updated on 2019-05-06},
  url          = {jupyter.readthedocs.io/en/latest/},
}

@Comment{jabref-meta: databaseType:bibtex;}

